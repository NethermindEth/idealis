[tool.poetry]
name = "idealis"
version = "0.0.1"
description = "Blockchain Parsing, RPC Interfacing, and Python Dataclass Definitions"
authors = ["Eli Barbieri <elicbarbieri@gmail.com>"]
readme = "README.md"
packages = [
    { include = "nethermind" },
]

[tool.poetry.dependencies]
python = "^3.10"
aiohttp = "^3.9.5"
requests = "^2.32.3"
starknet-abi = {git = "https://github.com/NethermindEth/starknet-abi.git"}


[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
black = "^24.4.2"
pre-commit = "^3.7.1"
mypy = "^1.10.0"
isort = "^5.13.2"
pytest-asyncio = "^0.23.7"
python-dotenv = "^1.0.1"
pylint = "^3.2.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 120
exclude = '''
/(
    \.eggs
  | \.coverage
  | \.env
  | \.git
  | \.github
  | \.pytest_cache
  | \.mypy_cache
  | \.venv
  | _build
  | build
  | cache
  | dist
)/
'''

[tool.isort]
profile = "black"
atomic = true
include_trailing_comma = true
use_parentheses = true
src_paths = ["nethermind/idealis", "tests"]
filter_files = true
known_first_party = "nethermind"
py_version='312'

[tool.pylint.main]
max-line-length = 120
jobs = 12
ignore-paths = [ "^tests\\.*$" ]
py-version = "3.12"
suggestion-mode = true
disable=[
    "C0103",
    "C0114",
    "C0115",  # Missing Class Docstring... Most classes are self-explanatory dataclasses
    "R0801",
    "R0902",
    "R0903",
    "R1719",
    "W1203",
    "W1514",
]


[tool.mypy]
explicit_package_bases = true
namespace_packages = true
exclude = [
    "^tests\\.py$",
]
